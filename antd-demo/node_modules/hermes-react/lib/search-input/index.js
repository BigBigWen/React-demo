'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _button = require('antd/lib/button');

var _button2 = _interopRequireDefault(_button);

var _select = require('antd/lib/select');

var _select2 = _interopRequireDefault(_select);

var _input = require('antd/lib/input');

var _input2 = _interopRequireDefault(_input);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _class, _temp, _initialiseProps;

require('antd/lib/button/style/css');

require('antd/lib/select/style/css');

require('antd/lib/input/style/css');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

require('./style/index');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var InputGroup = _input2["default"].Group;
var Option = _select2["default"].Option;
var empty = function empty() {};

var SearchInput = (_temp = _class = function (_Component) {
  _inherits(SearchInput, _Component);

  function SearchInput(props) {
    _classCallCheck(this, SearchInput);

    var _this = _possibleConstructorReturn(this, _Component.call(this, props));

    _initialiseProps.call(_this);

    var value = void 0;
    if ('value' in _this.props) {
      value = _this.props.value !== undefined ? _this.props.value : '';
    } else if ('defaultValue' in _this.props) {
      value = _this.props.defaultValue !== undefined ? _this.props.defaultValue : '';
    } else {
      value = '';
    }
    _this.state = {
      selectMode: _this.props.fetchData !== empty,
      data: [],
      value: value,
      focus: false
    };
    return _this;
  }

  SearchInput.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    if ('value' in nextProps) {
      this.setState({
        value: nextProps.value
      });
    }
  };

  SearchInput.prototype.render = function render() {
    var _props = this.props,
        className = _props.className,
        style = _props.style,
        size = _props.size,
        placeholder = _props.placeholder;
    var _state = this.state,
        selectMode = _state.selectMode,
        value = _state.value,
        focus = _state.focus,
        data = _state.data;

    var btnCls = (0, _classnames2["default"])({
      'ant-search-btn': true,
      'ant-search-btn-noempty': !!value.trim()
    });
    var searchCls = (0, _classnames2["default"])({
      'ant-search-input': true,
      'ant-search-input-focus': focus
    });
    var commonProps = {
      size: size,
      placeholder: placeholder,
      value: 'value' in this.props && this.props.value !== undefined ? this.props.value : value,
      onChange: this.handleChange,
      onFocus: this.handleFocusBlur,
      onBlur: this.handleFocusBlur
    };
    var options = data.map(function (d) {
      return _react2["default"].createElement(
        Option,
        { disabled: d.disabled, key: d.key },
        d.value
      );
    });
    return _react2["default"].createElement(
      'div',
      { className: 'hermes-search-input ant-search-input-wrapper' + (className ? ' ' + className : ''), style: style },
      _react2["default"].createElement(
        InputGroup,
        { className: searchCls },
        selectMode ? _react2["default"].createElement(
          _select2["default"],
          _extends({}, commonProps, {
            combobox: true,
            notFoundContent: '',
            defaultActiveFirstOption: false,
            showArrow: false,
            filterOption: false
          }),
          options
        ) : _react2["default"].createElement(_input2["default"], _extends({}, commonProps, {
          onPressEnter: this.handleSearch
        })),
        _react2["default"].createElement(
          'div',
          { className: 'ant-input-group-wrap' },
          _react2["default"].createElement(_button2["default"], { icon: 'search', className: btnCls, size: size, onClick: this.handleSearch })
        )
      )
    );
  };

  return SearchInput;
}(_react.Component), _class.propTypes = {
  className: _propTypes2["default"].string,
  style: _propTypes2["default"].object,
  value: _propTypes2["default"].string,
  defaultValue: _propTypes2["default"].string,
  placeholder: _propTypes2["default"].string,
  size: _propTypes2["default"].string,
  fetchData: _propTypes2["default"].func,
  onSearch: _propTypes2["default"].func,
  onChange: _propTypes2["default"].func
}, _class.defaultProps = {
  size: 'default',
  placeholder: '',
  fetchData: empty
}, _initialiseProps = function _initialiseProps() {
  var _this2 = this;

  this.fetch = function (value) {
    if (_this2.timeout) {
      clearTimeout(_this2.timeout);
      _this2.timeout = null;
    }
    _this2.currentValue = value;
    _this2.timeout = setTimeout(function () {
      return _this2.props.fetchData.call(null, value, function (cbValue) {
        var cbData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

        if (_this2.currentValue === cbValue) {
          _this2.setState({ data: cbData });
        }
      });
    }, 300);
  };

  this.handleChange = function (param) {
    var selectMode = _this2.state.selectMode;

    var value = selectMode ? param : param.target.value;
    _this2.setState({ value: value });
    if (_this2.props.onChange) {
      _this2.props.onChange(value);
    }
    if (selectMode) {
      _this2.fetch(value);
    }
  };

  this.handleFocusBlur = function (e) {
    _this2.setState({
      focus: e.target === document.activeElement
    });
  };

  this.handleSearch = function () {
    if (_this2.props.onSearch) {
      _this2.props.onSearch(_this2.state.value);
    }
  };
}, _temp);
exports["default"] = SearchInput;
module.exports = exports['default'];