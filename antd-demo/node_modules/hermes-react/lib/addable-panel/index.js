'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _button = require('antd/lib/button');

var _button2 = _interopRequireDefault(_button);

require('antd/lib/button/style/css');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDnd = require('react-dnd');

var _reactDndHtml5Backend = require('react-dnd-html5-backend');

var _reactDndHtml5Backend2 = _interopRequireDefault(_reactDndHtml5Backend);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Addable = require('../addable-row/Addable');

var _Addable2 = _interopRequireDefault(_Addable);

var _dnditem = require('./dnditem');

var _dnditem2 = _interopRequireDefault(_dnditem);

require('./style/index');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var AddablePanel = (0, _createReactClass2["default"])({
  displayName: 'AddablePanel',

  propTypes: {
    max: _propTypes2["default"].number, // 最大项数
    btnText: _propTypes2["default"].string, // 新增按钮文案
    draggable: _propTypes2["default"].bool // 是否打开拖拽
  },

  mixins: [_Addable2["default"]],

  getDefaultProps: function getDefaultProps() {
    return {
      btnText: '新增',
      draggable: false
    };
  },
  render: function render() {
    var _this = this;

    var _props = this.props,
        max = _props.max,
        btnText = _props.btnText,
        draggable = _props.draggable;
    var keys = this.state.keys;

    var panels = keys.map(function (rowId, rowIndex) {
      var elements = _this.renderElements(rowId, rowIndex);

      if (draggable) {
        return _react2["default"].createElement(_dnditem2["default"], {
          elements: elements,
          keys: keys,
          rowId: rowId,
          onRemove: _this.removeRow.bind(_this, rowId),
          onDragging: _this.onDragging,
          onDragEnd: _this.onDragEnd,
          key: rowId,
          index: rowIndex
        });
      }

      return _react2["default"].createElement(
        'div',
        { className: 'hrui-add-panel-block', key: rowId },
        elements,
        keys.length > 1 ? _react2["default"].createElement(
          'div',
          { className: 'hrui-add-panel-btngroup' },
          _react2["default"].createElement(
            'a',
            { className: 'hrui-add-panel-dlbtn', onClick: _this.removeRow.bind(_this, rowId) },
            '\u5220\u9664'
          )
        ) : null
      );
    });

    return _react2["default"].createElement(
      'div',
      { className: 'hrui-add-panel' },
      panels,
      _react2["default"].createElement(
        _button2["default"],
        {
          type: 'ghost',
          className: 'fn-ml16 fn-mt8',
          disabled: keys.length >= max,
          onClick: this.addRow },
        btnText
      )
    );
  }
});

exports["default"] = (0, _reactDnd.DragDropContext)(_reactDndHtml5Backend2["default"])(AddablePanel); // eslint-disable-line new-cap

module.exports = exports['default'];