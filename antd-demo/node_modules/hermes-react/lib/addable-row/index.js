'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _row = require('antd/lib/row');

var _row2 = _interopRequireDefault(_row);

var _col = require('antd/lib/col');

var _col2 = _interopRequireDefault(_col);

require('antd/lib/row/style/css');

require('antd/lib/col/style/css');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDnd = require('react-dnd');

var _reactDndHtml5Backend = require('react-dnd-html5-backend');

var _reactDndHtml5Backend2 = _interopRequireDefault(_reactDndHtml5Backend);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Addable = require('./Addable');

var _Addable2 = _interopRequireDefault(_Addable);

var _dnditem = require('./dnditem');

var _dnditem2 = _interopRequireDefault(_dnditem);

require('./style/index');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var AddableRow = (0, _createReactClass2["default"])({
  displayName: 'AddableRow',

  propTypes: {
    max: _propTypes2["default"].number, // 最大项数
    options: _propTypes2["default"].array, // 配置项，配置每个行|列里面的表单项
    copyable: _propTypes2["default"].bool, // 是否打开可复制操作
    draggable: _propTypes2["default"].bool, // 是否打开拖拽
    disabled: _propTypes2["default"].any // 是否禁用
  },

  mixins: [_Addable2["default"]],

  getDefaultProps: function getDefaultProps() {
    return {
      copyable: false,
      draggable: false
    };
  },
  render: function render() {
    var _this = this;

    var _props = this.props,
        max = _props.max,
        options = _props.options,
        disabled = _props.disabled,
        copyable = _props.copyable,
        draggable = _props.draggable;
    var keys = this.state.keys;


    var sum = 0;
    options.forEach(function (opt) {
      sum += Number(opt.width);
    });

    var tbody = keys.map(function (rowId, rowIndex) {
      var cols = _this.renderElements(rowId, rowIndex, { disabled: disabled }).map(function (col, colIndex) {
        return _react2["default"].createElement(
          _col2["default"],
          { key: colIndex, className: 'hrui-add-row-col', span: options[colIndex].width },
          col
        );
      });

      var control = [];
      if (disabled) {
        control = null;
      } else if (keys.length === 1) {
        control.push(_react2["default"].createElement(
          'a',
          { key: 1, onClick: _this.addRow },
          '\u65B0\u589E'
        ));
        if (copyable) {
          control.push(_react2["default"].createElement(
            'span',
            { key: 2, className: 'ft-bar' },
            '|'
          ));
          control.push(_react2["default"].createElement(
            'a',
            { key: 3, onClick: _this.copyRow.bind(_this, rowIndex) },
            '\u590D\u5236'
          ));
        }
      } else {
        if (rowIndex === keys.length - 1 && !(keys.length >= max)) {
          control.push(_react2["default"].createElement(
            'a',
            { key: 1, onClick: _this.addRow },
            '\u65B0\u589E'
          ));
          control.push(_react2["default"].createElement(
            'span',
            { key: 2, className: 'ft-bar' },
            '|'
          ));
        }
        if (copyable && !(keys.length >= max)) {
          control.push(_react2["default"].createElement(
            'a',
            { key: 3, onClick: _this.copyRow.bind(_this, rowIndex) },
            '\u590D\u5236'
          ));
          control.push(_react2["default"].createElement(
            'span',
            { key: 4, className: 'ft-bar' },
            '|'
          ));
        }
        control.push(_react2["default"].createElement(
          'a',
          { key: 5, onClick: _this.removeRow.bind(_this, rowId) },
          '\u5220\u9664'
        ));
      }

      var rowContent = [].concat(_toConsumableArray(cols), [_react2["default"].createElement(
        _col2["default"],
        { key: 'controls', className: 'hrui-add-row-col', span: String(24 - sum) },
        control
      )]);

      if (draggable) {
        return _react2["default"].createElement(_dnditem2["default"], {
          rowId: rowId,
          content: rowContent,
          onDragging: _this.onDragging,
          onDragEnd: _this.onDragEnd,
          key: rowId,
          index: rowIndex
        });
      }

      return _react2["default"].createElement(
        _row2["default"],
        { key: rowId, className: 'hrui-add-row' },
        rowContent
      );
    });

    return _react2["default"].createElement(
      'div',
      { className: 'hrui-add-row-body' },
      tbody
    );
  }
});

exports["default"] = (0, _reactDnd.DragDropContext)(_reactDndHtml5Backend2["default"])(AddableRow); // eslint-disable-line new-cap

module.exports = exports['default'];