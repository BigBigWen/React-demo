'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TreeNode = function (_Component) {
  (0, _inherits3.default)(TreeNode, _Component);

  function TreeNode() {
    (0, _classCallCheck3.default)(this, TreeNode);
    return (0, _possibleConstructorReturn3.default)(this, (TreeNode.__proto__ || (0, _getPrototypeOf2.default)(TreeNode)).apply(this, arguments));
  }

  (0, _createClass3.default)(TreeNode, [{
    key: 'renderCheckbox',
    value: function renderCheckbox() {
      var node = this.props.node;

      var checkState = node.checkState();
      var disableState = node.disableState();
      var checkboxCls = {
        'hermes-tree-checkbox': true,
        'hermes-tree-checkbox-checked': checkState === 1,
        'hermes-tree-checkbox-indeterminate': checkState === -1,
        'hermes-tree-checkbox-disabled': disableState === 1
      };
      return _react2.default.createElement(
        'span',
        { className: (0, _classnames2.default)(checkboxCls) },
        _react2.default.createElement('span', { className: 'hermes-tree-checkbox-inner' })
      );
    }
  }, {
    key: 'renderSwitcher',
    value: function renderSwitcher() {
      var _props = this.props,
          node = _props.node,
          onExpand = _props.onExpand,
          expand = _props.expand;

      var count = node.degree();
      var switcherCls = {
        'hermes-tree-switcher': true,
        'hermes-tree-switcher-noop': count === 0 || node.id === '#',
        'hermes-tree-noline_open': expand && count > 0,
        'hermes-tree-noline_close': !expand && count > 0
      };
      return count === 0 ? _react2.default.createElement('span', { className: (0, _classnames2.default)(switcherCls) }) : _react2.default.createElement('span', { className: (0, _classnames2.default)(switcherCls), onClick: onExpand });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          node = _props2.node,
          onCheck = _props2.onCheck,
          nodeText = _props2.nodeText;

      var disableState = node.disableState();
      var nodeCls = {
        'hermes-tree-node': node.id !== '#',
        'hermes-tree-node-disabled': disableState === 1,
        'hermes-tree-root': node.id === '#'
      };
      return _react2.default.createElement(
        'div',
        { key: node.id, className: (0, _classnames2.default)(nodeCls), style: { marginLeft: (node.depth() - 1) * 16 } },
        this.renderSwitcher(),
        _react2.default.createElement(
          'div',
          { className: 'tree-node-text', onClick: onCheck },
          this.renderCheckbox(),
          nodeText(node)
        )
      );
    }
  }]);
  return TreeNode;
}(_react.Component);

TreeNode.propTypes = {
  node: _react.PropTypes.object,
  expand: _react.PropTypes.bool,
  onExpand: _react.PropTypes.func,
  onCheck: _react.PropTypes.func,
  nodeText: _react.PropTypes.func
};
exports.default = TreeNode;